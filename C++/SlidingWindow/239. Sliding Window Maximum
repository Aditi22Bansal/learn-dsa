//problem name: Sliding Window Maximum
//problem link: https://leetcode.com/problems/sliding-window-maximum/description/
//code:
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> ans;
        // deque<int> ll;
        list<int> ll;
        int i=0,j=0;
        int n = nums.size();
        while(j<n){
            while(ll.size()>0 && ll.back()<nums[j])ll.pop_back();
            ll.push_back(nums[j]);
            if(j-i+1<k)j++;
            else if(j-i+1==k){
                ans.push_back(ll.front());
                if(nums[i]==ll.front())ll.pop_front();
                i++;
                j++;
            }
        }
        return ans;
    }
};
